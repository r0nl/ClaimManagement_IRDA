// <auto-generated />
using System;
using IRDA_DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IRDA_DAL.Migrations
{
    [DbContext(typeof(IRDAContext))]
    [Migration("20240322105212_IniMig")]
    partial class IniMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IRDA_DAL.Model.ClaimDetail", b =>
                {
                    b.Property<string>("ClaimId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmtApprovedBySurveyor")
                        .HasColumnType("int");

                    b.Property<string>("ClaimStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Open");

                    b.Property<DateOnly>("DateOfAccident")
                        .HasColumnType("date");

                    b.Property<int>("EstimatedLoss")
                        .HasColumnType("int");

                    b.Property<bool>("InsuranceCompanyApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PolicyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SurveyorFees")
                        .HasColumnType("int");

                    b.Property<int?>("SurveyorID")
                        .HasColumnType("int");

                    b.Property<bool>("WithdrawClaim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ClaimId");

                    b.HasIndex("PolicyNo");

                    b.HasIndex("SurveyorID");

                    b.ToTable("ClaimDetails");

                    b.HasData(
                        new
                        {
                            ClaimId = "QWERTYUIOP",
                            AmtApprovedBySurveyor = 9000,
                            ClaimStatus = "Closed",
                            DateOfAccident = new DateOnly(2024, 2, 3),
                            EstimatedLoss = 10000,
                            InsuranceCompanyApproval = true,
                            PolicyNo = "CS12345",
                            SurveyorFees = 1500,
                            SurveyorID = 12345,
                            WithdrawClaim = true
                        },
                        new
                        {
                            ClaimId = "WERTYUIOPQ",
                            AmtApprovedBySurveyor = 10000,
                            ClaimStatus = "Open",
                            DateOfAccident = new DateOnly(2023, 12, 13),
                            EstimatedLoss = 11000,
                            InsuranceCompanyApproval = true,
                            PolicyNo = "CS23456",
                            SurveyorFees = 1700,
                            SurveyorID = 23456,
                            WithdrawClaim = false
                        },
                        new
                        {
                            ClaimId = "ERTYUIOPQW",
                            AmtApprovedBySurveyor = 11000,
                            ClaimStatus = "Open",
                            DateOfAccident = new DateOnly(2023, 11, 30),
                            EstimatedLoss = 12000,
                            InsuranceCompanyApproval = false,
                            PolicyNo = "CS34567",
                            SurveyorFees = 2000,
                            SurveyorID = 34567,
                            WithdrawClaim = true
                        },
                        new
                        {
                            ClaimId = "RTYUIOPQWE",
                            AmtApprovedBySurveyor = 12000,
                            ClaimStatus = "Closed",
                            DateOfAccident = new DateOnly(2024, 1, 31),
                            EstimatedLoss = 13000,
                            InsuranceCompanyApproval = true,
                            PolicyNo = "CS45678",
                            SurveyorFees = 1900,
                            SurveyorID = 45678,
                            WithdrawClaim = true
                        },
                        new
                        {
                            ClaimId = "TYUIOPQWER",
                            AmtApprovedBySurveyor = 13000,
                            ClaimStatus = "Closed",
                            DateOfAccident = new DateOnly(2024, 2, 13),
                            EstimatedLoss = 14000,
                            InsuranceCompanyApproval = false,
                            PolicyNo = "CS56789",
                            SurveyorFees = 1800,
                            SurveyorID = 56789,
                            WithdrawClaim = false
                        },
                        new
                        {
                            ClaimId = "1234567890",
                            AmtApprovedBySurveyor = 9000,
                            ClaimStatus = "Open",
                            DateOfAccident = new DateOnly(2024, 2, 23),
                            EstimatedLoss = 10000,
                            InsuranceCompanyApproval = true,
                            PolicyNo = "CS12345",
                            SurveyorFees = 1500,
                            WithdrawClaim = true
                        },
                        new
                        {
                            ClaimId = "2345678901",
                            AmtApprovedBySurveyor = 12000,
                            ClaimStatus = "Open",
                            DateOfAccident = new DateOnly(2024, 1, 30),
                            EstimatedLoss = 13000,
                            InsuranceCompanyApproval = true,
                            PolicyNo = "CS45678",
                            SurveyorFees = 1900,
                            WithdrawClaim = true
                        });
                });

            modelBuilder.Entity("IRDA_DAL.Model.Policy", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("DateOfInsurance")
                        .HasColumnType("date");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuredLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("PolicyNo");

                    b.ToTable("Policies");

                    b.HasData(
                        new
                        {
                            PolicyNo = "CS12345",
                            DateOfInsurance = new DateOnly(2024, 1, 1),
                            EmailId = "p1@gmail.com",
                            InsuredFirstName = "Abcde",
                            InsuredLastName = "Zyxwv",
                            VehicleNo = "1234",
                            status = false
                        },
                        new
                        {
                            PolicyNo = "CS23456",
                            DateOfInsurance = new DateOnly(2022, 10, 11),
                            EmailId = "p2@gmail.com",
                            InsuredFirstName = "Bcdef",
                            InsuredLastName = "Yxwvu",
                            VehicleNo = "2345",
                            status = true
                        },
                        new
                        {
                            PolicyNo = "CS34567",
                            DateOfInsurance = new DateOnly(2023, 11, 12),
                            EmailId = "p3@gmail.com",
                            InsuredFirstName = "Cdefg",
                            InsuredLastName = "Xwvut",
                            VehicleNo = "3456",
                            status = false
                        },
                        new
                        {
                            PolicyNo = "CS45678",
                            DateOfInsurance = new DateOnly(2024, 1, 21),
                            EmailId = "p4@gmail.com",
                            InsuredFirstName = "Defgh",
                            InsuredLastName = "Wvuts",
                            VehicleNo = "4567",
                            status = true
                        },
                        new
                        {
                            PolicyNo = "CS56789",
                            DateOfInsurance = new DateOnly(2024, 1, 19),
                            EmailId = "p5@gmail.com",
                            InsuredFirstName = "Efghi",
                            InsuredLastName = "Vutsr",
                            VehicleNo = "5678",
                            status = true
                        });
                });

            modelBuilder.Entity("IRDA_DAL.Model.Surveyor", b =>
                {
                    b.Property<int>("SurveyorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyorId"));

                    b.Property<int>("EstimateLimit")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesAllocated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("SurveyorId");

                    b.ToTable("Surveyors");

                    b.HasData(
                        new
                        {
                            SurveyorId = 12345,
                            EstimateLimit = 20000,
                            FirstName = "Abcde",
                            LastName = "Zyxwv",
                            TimesAllocated = 4
                        },
                        new
                        {
                            SurveyorId = 23456,
                            EstimateLimit = 21000,
                            FirstName = "Bcdef",
                            LastName = "Yxwvu",
                            TimesAllocated = 5
                        },
                        new
                        {
                            SurveyorId = 34567,
                            EstimateLimit = 22000,
                            FirstName = "Cdefg",
                            LastName = "Xwvut",
                            TimesAllocated = 6
                        },
                        new
                        {
                            SurveyorId = 45678,
                            EstimateLimit = 23000,
                            FirstName = "Defgh",
                            LastName = "Wvuts",
                            TimesAllocated = 7
                        },
                        new
                        {
                            SurveyorId = 56789,
                            EstimateLimit = 24000,
                            FirstName = "Efghi",
                            LastName = "Vutsr",
                            TimesAllocated = 8
                        });
                });

            modelBuilder.Entity("IRDA_DAL.Model.paymentOfClaim", b =>
                {
                    b.Property<string>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("month")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("payment")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("reportId");

                    b.ToTable("paymentOfClaims");
                });

            modelBuilder.Entity("IRDA_DAL.Model.pendingStatusReport", b =>
                {
                    b.Property<string>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("stage")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<string>("month")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("reportId", "stage");

                    b.ToTable("pendingStatusReports");
                });

            modelBuilder.Entity("IRDA_DAL.Model.ClaimDetail", b =>
                {
                    b.HasOne("IRDA_DAL.Model.Policy", "Policy")
                        .WithMany("claimDetails")
                        .HasForeignKey("PolicyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IRDA_DAL.Model.Surveyor", "Surveyor")
                        .WithMany("claimDetails")
                        .HasForeignKey("SurveyorID");

                    b.Navigation("Policy");

                    b.Navigation("Surveyor");
                });

            modelBuilder.Entity("IRDA_DAL.Model.Policy", b =>
                {
                    b.Navigation("claimDetails");
                });

            modelBuilder.Entity("IRDA_DAL.Model.Surveyor", b =>
                {
                    b.Navigation("claimDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
